"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/convert/route";
exports.ids = ["app/api/convert/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fconvert%2Froute&page=%2Fapi%2Fconvert%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fconvert%2Froute.ts&appDir=D%3A%5C%D9%85%D8%AC%D9%84%D8%AF%20%D8%AC%D8%AF%D9%8A%D8%AF%5Croom%5Cpdf-processor%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5C%D9%85%D8%AC%D9%84%D8%AF%20%D8%AC%D8%AF%D9%8A%D8%AF%5Croom%5Cpdf-processor&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fconvert%2Froute&page=%2Fapi%2Fconvert%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fconvert%2Froute.ts&appDir=D%3A%5C%D9%85%D8%AC%D9%84%D8%AF%20%D8%AC%D8%AF%D9%8A%D8%AF%5Croom%5Cpdf-processor%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5C%D9%85%D8%AC%D9%84%D8%AF%20%D8%AC%D8%AF%D9%8A%D8%AF%5Croom%5Cpdf-processor&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/node-polyfill-headers */ \"(rsc)/./node_modules/next/dist/server/node-polyfill-headers.js\");\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var D_room_pdf_processor_src_app_api_convert_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/convert/route.ts */ \"(rsc)/./src/app/api/convert/route.ts\");\n\n// @ts-ignore this need to be imported from next/dist to be external\n\n\n// @ts-expect-error - replaced by webpack/turbopack loader\n\nconst AppRouteRouteModule = next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__.AppRouteRouteModule;\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_2__.RouteKind.APP_ROUTE,\n        page: \"/api/convert/route\",\n        pathname: \"/api/convert\",\n        filename: \"route\",\n        bundlePath: \"app/api/convert/route\"\n    },\n    resolvedPagePath: \"D:\\\\مجلد جديد\\\\room\\\\pdf-processor\\\\src\\\\app\\\\api\\\\convert\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_room_pdf_processor_src_app_api_convert_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/convert/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjb252ZXJ0JTJGcm91dGUmcGFnZT0lMkZhcGklMkZjb252ZXJ0JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY29udmVydCUyRnJvdXRlLnRzJmFwcERpcj1EJTNBJTVDJUQ5JTg1JUQ4JUFDJUQ5JTg0JUQ4JUFGJTIwJUQ4JUFDJUQ4JUFGJUQ5JThBJUQ4JUFGJTVDcm9vbSU1Q3BkZi1wcm9jZXNzb3IlNUNzcmMlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUQlM0ElNUMlRDklODUlRDglQUMlRDklODQlRDglQUYlMjAlRDglQUMlRDglQUYlRDklOEElRDglQUYlNUNyb29tJTVDcGRmLXByb2Nlc3NvciZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFnRDtBQUNoRDtBQUMwRjtBQUMzQjtBQUMvRDtBQUNpRztBQUNqRyw0QkFBNEIsZ0hBQTBCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsdUdBQXVHO0FBQy9HO0FBQ2lKOztBQUVqSiIsInNvdXJjZXMiOlsid2VicGFjazovL3BkZi1wcm9jZXNzb3IvPzc4MmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwibmV4dC9kaXN0L3NlcnZlci9ub2RlLXBvbHlmaWxsLWhlYWRlcnNcIjtcbi8vIEB0cy1pZ25vcmUgdGhpcyBuZWVkIHRvIGJlIGltcG9ydGVkIGZyb20gbmV4dC9kaXN0IHRvIGJlIGV4dGVybmFsXG5pbXBvcnQgKiBhcyBtb2R1bGUgZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbi8vIEB0cy1leHBlY3QtZXJyb3IgLSByZXBsYWNlZCBieSB3ZWJwYWNrL3R1cmJvcGFjayBsb2FkZXJcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJEOlxcXFzZhdis2YTYryDYrNiv2YrYr1xcXFxyb29tXFxcXHBkZi1wcm9jZXNzb3JcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcY29udmVydFxcXFxyb3V0ZS50c1wiO1xuY29uc3QgQXBwUm91dGVSb3V0ZU1vZHVsZSA9IG1vZHVsZS5BcHBSb3V0ZVJvdXRlTW9kdWxlO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvY29udmVydC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2NvbnZlcnRcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2NvbnZlcnQvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJEOlxcXFzZhdis2YTYryDYrNiv2YrYr1xcXFxyb29tXFxcXHBkZi1wcm9jZXNzb3JcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcY29udmVydFxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9jb252ZXJ0L3JvdXRlXCI7XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fconvert%2Froute&page=%2Fapi%2Fconvert%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fconvert%2Froute.ts&appDir=D%3A%5C%D9%85%D8%AC%D9%84%D8%AF%20%D8%AC%D8%AF%D9%8A%D8%AF%5Croom%5Cpdf-processor%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5C%D9%85%D8%AC%D9%84%D8%AF%20%D8%AC%D8%AF%D9%8A%D8%AF%5Croom%5Cpdf-processor&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/convert/route.ts":
/*!**************************************!*\
  !*** ./src/app/api/convert/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OPTIONS: () => (/* binding */ OPTIONS),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n\nconst dynamic = \"force-dynamic\";\nconst responseHeaders = {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Methods\": \"POST, OPTIONS\",\n    \"Access-Control-Allow-Headers\": \"Content-Type\",\n    \"Cache-Control\": \"no-cache\"\n};\nasync function OPTIONS() {\n    return new Response(null, {\n        headers: responseHeaders\n    });\n}\nconst delay = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms));\nasync function POST(request) {\n    try {\n        // Validate API key\n        const convertApiSecret = process.env.CONVERTAPI_SECRET;\n        if (!convertApiSecret) {\n            throw new Error(\"CONVERTAPI_SECRET environment variable is not set\");\n        }\n        const formData = await request.formData();\n        const file = formData.get(\"file\");\n        const format = formData.get(\"format\");\n        const isImageToPdf = formData.get(\"isImageToPdf\") === \"true\";\n        if (!file) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"No file provided\"\n            }, {\n                status: 400,\n                headers: responseHeaders\n            });\n        }\n        // Validate file type based on conversion direction\n        if (isImageToPdf) {\n            if (![\n                \"image/jpeg\",\n                \"image/png\"\n            ].includes(file.type)) {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    error: \"Invalid file type. Please provide a JPEG or PNG image\"\n                }, {\n                    status: 400,\n                    headers: responseHeaders\n                });\n            }\n        } else {\n            if (file.type !== \"application/pdf\") {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    error: \"Invalid file type. Please provide a PDF file\"\n                }, {\n                    status: 400,\n                    headers: responseHeaders\n                });\n            }\n        }\n        // Check file size (10MB limit)\n        const maxSize = 10 * 1024 * 1024; // 10MB\n        if (file.size > maxSize) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"حجم الملف يتجاوز الحد الأقصى (10 ميجابايت)\"\n            }, {\n                status: 413,\n                headers: responseHeaders\n            });\n        }\n        try {\n            console.log(\"Starting conversion...\", {\n                format,\n                isImageToPdf,\n                fileType: file.type,\n                fileSize: file.size\n            });\n            // Validate format\n            const supportedFormats = isImageToPdf ? {\n                pdf: \"jpg/to/pdf,png/to/pdf\"\n            } : {\n                docx: \"pdf/to/docx\"\n            };\n            if (!format || !supportedFormats[format]) {\n                throw new Error(`Format not supported: ${format}`);\n            }\n            const baseUrls = [\n                \"https://v1.convertapi.com\",\n                \"https://v2.convertapi.com\",\n                \"https://api.convertapi.com\"\n            ];\n            let response;\n            let lastError;\n            // Try different API endpoints with retry logic\n            for (const baseUrl of baseUrls){\n                let attempts = 0;\n                const maxAttempts = 3;\n                const conversionPath = isImageToPdf ? `${file.type.split(\"/\")[1]}/to/pdf` : supportedFormats[format];\n                const apiUrl = `${baseUrl}/convert/${conversionPath}?Secret=${convertApiSecret}&StoreFile=true&Timeout=600`;\n                while(attempts < maxAttempts){\n                    try {\n                        console.log(`Trying ${baseUrl}, attempt ${attempts + 1} of ${maxAttempts}...`);\n                        // Create blob with proper content type\n                        const fileBuffer = await file.arrayBuffer();\n                        const contentType = isImageToPdf ? file.type : \"application/pdf\";\n                        const fileBlob = new Blob([\n                            fileBuffer\n                        ], {\n                            type: contentType\n                        });\n                        // Create form data with all parameters\n                        const apiFormData = new FormData();\n                        apiFormData.append(\"File\", fileBlob, file.name);\n                        apiFormData.append(\"StoreFile\", \"true\");\n                        apiFormData.append(\"Timeout\", \"120\");\n                        const fetchResponse = await fetch(apiUrl, {\n                            method: \"POST\",\n                            body: apiFormData\n                        });\n                        console.log(\"Response status:\", fetchResponse.status);\n                        if (fetchResponse.status === 415) {\n                            const errorText = await fetchResponse.text();\n                            console.error(\"415 Error details:\", errorText);\n                            throw new Error(`Unsupported Media Type: ${errorText}`);\n                        }\n                        if (!fetchResponse.ok) {\n                            throw new Error(`HTTP error! status: ${fetchResponse.status}`);\n                        }\n                        response = await fetchResponse.json();\n                        // If successful, break out of both loops\n                        if (response) {\n                            console.log(\"Conversion request successful\");\n                            break;\n                        }\n                    } catch (err) {\n                        lastError = err;\n                        console.error(`Attempt ${attempts + 1} failed:`, err.message);\n                        // Wait before retrying (exponential backoff)\n                        await delay(Math.pow(2, attempts) * 1000);\n                        attempts++;\n                    }\n                }\n                // If we got a successful response, break out of the baseUrl loop\n                if (response) {\n                    break;\n                }\n            }\n            // If all attempts failed\n            if (!response) {\n                throw lastError || new Error(\"All conversion attempts failed\");\n            }\n            console.log(\"Processing response...\");\n            if (!response?.Files?.[0]?.Url) {\n                throw new Error(\"لم يتم استلام رابط الملف المحول\");\n            }\n            // Download converted file\n            console.log(\"Downloading converted file...\");\n            const fileResponse = await fetch(response.Files[0].Url);\n            if (!fileResponse.ok) {\n                throw new Error(\"Failed to download converted file\");\n            }\n            const fileBuffer = await fileResponse.arrayBuffer();\n            console.log(\"File downloaded successfully\");\n            const contentTypes = {\n                docx: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n                pdf: \"application/pdf\"\n            };\n            const outputFormat = isImageToPdf ? \"pdf\" : format;\n            const headers = {\n                ...responseHeaders,\n                \"Content-Type\": contentTypes[outputFormat],\n                \"Content-Disposition\": `attachment; filename=\"converted.${outputFormat}\"`\n            };\n            return new Response(fileBuffer, {\n                headers\n            });\n        } catch (conversionError) {\n            console.error(\"Conversion error:\", {\n                message: conversionError.message,\n                status: conversionError.status\n            });\n            let errorMessage = \"فشل التحويل\";\n            if (conversionError.message) {\n                errorMessage += `: ${conversionError.message}`;\n            }\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: errorMessage\n            }, {\n                status: 422,\n                headers: responseHeaders\n            });\n        }\n    } catch (error) {\n        console.error(\"Server error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"حدث خطأ غير متوقع. الرجاء المحاولة مرة أخرى\"\n        }, {\n            status: 500,\n            headers: responseHeaders\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/convert/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fconvert%2Froute&page=%2Fapi%2Fconvert%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fconvert%2Froute.ts&appDir=D%3A%5C%D9%85%D8%AC%D9%84%D8%AF%20%D8%AC%D8%AF%D9%8A%D8%AF%5Croom%5Cpdf-processor%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5C%D9%85%D8%AC%D9%84%D8%AF%20%D8%AC%D8%AF%D9%8A%D8%AF%5Croom%5Cpdf-processor&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();